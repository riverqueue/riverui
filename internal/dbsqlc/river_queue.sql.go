// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: river_queue.sql

package dbsqlc

import (
	"context"
)

const queueNameListByPrefix = `-- name: QueueNameListByPrefix :many
SELECT name
FROM river_queue
WHERE name > $1::text
  AND ($2::text = '' OR name LIKE $2::text || '%')
  AND ($3::text[] IS NULL OR name != ALL($3))
ORDER BY name
LIMIT $4::int
`

type QueueNameListByPrefixParams struct {
	After   string
	Prefix  string
	Exclude []string
	Max     int32
}

func (q *Queries) QueueNameListByPrefix(ctx context.Context, db DBTX, arg *QueueNameListByPrefixParams) ([]string, error) {
	rows, err := db.Query(ctx, queueNameListByPrefix,
		arg.After,
		arg.Prefix,
		arg.Exclude,
		arg.Max,
	)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var name string
		if err := rows.Scan(&name); err != nil {
			return nil, err
		}
		items = append(items, name)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
