name: Docker

on:
  push:
    branches:
      - "master"
    tags:
      - "v*"
  pull_request:
    branches:
      - "master"

env:
  IMAGE_NAME: ${{ github.repository }}
  REGISTRY: ghcr.io

jobs:
  docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        docker_platform: ["linux/amd64", "linux/arm64", "linux/arm64/v8"]
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
    permissions:
      attestations: write
      contents: read
      id-token: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push to GitHub Container Registry
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          pull: true
          platforms: ${{ matrix.docker_platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache,mode=max
          outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=River UI

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          push-to-registry: true
          subject-digest: ${{ steps.build.outputs.digest }}
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
